2020180021 송승호 yudle537@gmail.com 010-8518-5624

정내훈 : 010-8964-9524
-----------------------------------------------------------------

졸작을 유예하고 1년 더 공부하고 싶다.
- 게임서버프로그래밍 청강,  멀티코어 프로그래밍 수강


서버프로그래머가 되고 싶다.


학부 연구생은 가능한가?  학교에 1년 더 다니려 한다.

졸작은?
 지금 이대현 교수님 지도로 언리얼 서버를 맞고 있는데, 폭파될 예정.
 내년 2학기에 다시 시작 예정,  논문 보다는 게임 제작 선호. 


다른 교수님들 : 이대현, 김경철, 이용희

학부 연구생의 의무와 혜택
 - 원하는 것 : 서버 프로그래밍, 멀티 쓰레드 알고리즘 최적화, 함수형 언어, 리눅스에서 서버 개발

- 의무 : 과제 수행, 조교 업무

- 혜택 : 과제 비 수령,  조교 장학금 수령, 일주일에 한번 개인 지도
           연구실 제공 (책상, 의자, PC)   => 혹시 학과에 빈 방이 있을까?????  없으면 E314호


겨울방학 동한 할 수 있는 일
 - MMO 온라인 게임을 하나 만들어 보기 (SFML을 사용한 2D 게임)
 - 다른 언어 공부해 보기 : RUST,  Elixir, Haskell
 - 멀티 쓰레드 프로그래밍 도전
  * Skip-List에 EBR 추가
  * Lock Free 만능 객체 최적화 (지금보다 100배 이상 성능 향상)
  * Lock Free elimination stack 최적화 (논문을 보고 논문에 있는 최적화 기법을 실제로 적용)
  * lock free shared pointer 개선 : 선배가 작성한 논문이 있는데, 성능의 약점이 있고 이를 보완.

- 

- 다음 미팅 : 1월 6일 월요일 오후 4시 30분
  * GITHUB에 프로젝트를 하나 만들고 거기에 EBR SKIPLIST 구현  시작, 나를 초대. (zzapuno@hotmail.com)

2025-01-06
-------------
1. EBR SKIPLIST를 구현해 보았다.
 -  Reuse는 호출하는데 GetNode는 호출하지 않음.
 - 오류!!!! => Add할 때 new_node를 미리 만들어두는 코드에서 오류 발생
  => 오류를 알았으니 다시 구현!!!
  => 고민해 보고 잘 안되면 https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-579.pdf  참조
2. 다음 미팅
 - 1월 20일 오후 4시 30분

2025-01-20
-------------
1. 첫번째 시도
 - 바닥이 마킹되어 있으면 재사용하자
 - 문제 : 바닥이 마킹되었다고 해서 가리키는 노드가 하나도 없다는 조건은 만족하지 않는다.
  왜? Find 에서 제거를 하는데 최상층이 제거된다는 보장이 없다.

2. 두번째 시도
 - 별도의 배열을 하나 두고 Find에서 제거할 때 마다 제거한 층을 표시하게 한다. 다 제거가 되는 순간 재사용하자.
 - 문제 : 추가둥에 제거가 호출되었을 경우 제거된 링크를 추가가 되살리는 문제가 발생한다.
 - 해결 : 포인터에 마킹말고 제거되었음도 같이 표시하자.
 - 문제 : 추가가 덮어쓰는 것을 막을 수 없다.
 
3. 해결방법
 - 문제는 새 노드를 추가할 때 다른 쓰레드에서 그 노드를 같이 제거하는 것이다. 제거의 속도가 추가의 속도보다 빨라서 먼저 제거된 포인터를
  추가 동작에서 덮어써서 마킹을 지워버리는 것이 문제이다.
 - 해결방법 : 
    추가할 때 마킹을 그대로 보존하면서 추가 한다.
    add_node.next[i] = curr[i]  X
    
    while (true) {
       removed = add_node.next[i].getremoved();
       if (true == add_node.next[i].CAS(nullptr, currs[i].get_ptr(), removed, removed)) {
          while (true) {
                if (false == prev.next[i].CAS(currs[i].next[i], add_node, false, false)) {
                       Find(x, prevs, currs);
                       continue; 
                } else break;
          }
       break;
       }
       Find(x, prevs, currs); 
    }

  4. 다음미팅
   - 2025-02-10 월요일 4시 30분